package com.orangeaterz.designpatterns.解释器模式.calculate;

/**
 * 解释器模式
 * 优点：
 * 灵活的扩展性，当我们想对文法规则进行扩展延伸时，
 * 只需要增加相应的非终结符解释器，并在构建抽象语
 * 法树时，使用到新增的解释器对象进行具体的解释即可，非常方便
 * <p>
 * 缺点：
 * 因为对于每一条文法都可以对应至少一个解释器，其会生成大量的类，导致后期维护困难；
 * 同时，对于过于复杂的文法，构建其抽象语法树会显得异常烦琐，甚至有可能会出现需要
 * 构建多棵抽象语法树的情况，因此对于复杂的文法并不推荐使用解释器模式
 */
public class Summary {

}
